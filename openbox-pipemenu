#!/bin/bash
#
# add to menus like openbox with a like this:
# <menu execute="/path/to/script -p /path/to/stuff" id="menu id" label="menu name"/>
#
# setting software
declare -r fm='thunar'
declare -r ed='geany'
declare -r te='terminator -x'
#
# Don't edit past this line unless you know what you are doing
#
# help screen
function help_screen () {
  echo "Usage: script [option] 'something'"
  echo ""
  echo "-option"
  echo ""
  exit 0
  }
# voiding variables
path=""
id_number=""
# parsing out arguments
while getopts ":hp:i:" opt; do
  case $opt in
    h)
      help_screen
      exit 0
    ;;
    p)
      declare -r path="${OPTARG}"
      exit 0
    ;;
    i)
      id_number="${OPTARG}"
      exit 0
    ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      help_screen
      exit 1
    ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      help_screen
      exit 1
    ;;
  esac
done #while getopts "??" opt; do
# making for loop ignore spaces
IFS=$(echo -en "\n\b")
# setting script information
script="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
script_name="$(basename "${BASH_SOURCE[0]}")"
# checking for id_number
if [ -z $id_number ]; then id_number=0; fi
# functions
function menu_id () { ((id_number++)) ;}
function mcall () {
  menu_id
  local label="$1"
  # sanatizing label
  label=("${label//</&lt;}")
  label=("${label//&/&amp;}")
  label=("${label//>/&gt;}")
  label=("${label//\"/&quot;}")
  label=("${label//\'/&apos;}")
  label=("${label//_/__}")
  #hotkey management
  if [ -z "$2" ]; then
    label=$label"_"
  else
    label=("${label/$2/_$2}")
  fi
  echo '<menu id="Rom_menu_id_'$id_number'" label="'$label'">' ;}
function mend () { echo '</menu>' ;}
function icall () {
  local label="$1"
  # sanatizing label
  label=("${label//</&lt;}")
  label=("${label//&/&amp;}")
  label=("${label//>/&gt;}")
  label=("${label//\"/&quot;}")
  label=("${label//\'/&apos;}")
  label=("${label//_/__}")
  #hotkey management
  if [ -z "$2" ]; then
    label=$label"_"
  else
    label=("${label/$2/_$2}")
  fi
  echo '<item label="'$label'"><action name="Execute"><command>' ;}
function iend () { echo '</command></action></item>' ;}
function scall () {
  if [ -z $1 ]; then
    echo '<separator/>'
  else
    local label="$1"
    # sanatizing label
    label=("${label//</&lt;}")
    label=("${label//&/&amp;}")
    label=("${label//>/&gt;}")
    label=("${label//\"/&quot;}")
    label=("${label//\'/&apos;}")
    label=("${label//_/__}")
    echo '<separator label="'$label'"/>'
  fi ;}
function pcall () {
  menu_id
  local label="$1"
  # sanatizing label
  label=("${label//</&lt;}")
  label=("${label//&/&amp;}")
  label=("${label//>/&gt;}")
  label=("${label//\"/&quot;}")
  label=("${label//\'/&apos;}")
  label=("${label//_/__}")
    if [ -z "$2" ]; then
      label=$label"_"
    else
      label=("${label/$2/_$2}")
    fi
  if [ -z $path ]; then
    echo '<menu execute="'$script '-p' $path '-i' $id_number $2'" id="'$script_name'_menu_id_'$id_number'" label="'$label'"/>'
  else
    echo '<menu execute="'$script '-i' $id_number $2'" id="'$script_name'_menu_id_'$id_number'" label="'$label'"/>'
  fi  ;}
echo "<openbox_pipe_menu>"
echo "</openbox_pipe_menu>"
exit 0
